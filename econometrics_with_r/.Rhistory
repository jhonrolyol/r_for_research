dir.create("1.slides")
dir.create("2.scripts")
dir.create("3.raw_data")
dir.create("4.documentation")
dir.create("5.processed_data")
dir.create("6.results")
dir.create("6.results/6.1.tables")
dir.create("6.results/6.2.figures")
dir.create("7.analysis")
mean(1:5)
a_vector <- c(1, 3, 6, 10)
apropos("vector")
# 1.1.- R as a calculator -------------------------------------------------
1 + 1
5*(4-1)^2
sqrt(log(10))
install.packages(c("AER","car","CensReg", "dplyr", "dummies",
"dynlm", "effects", "ggplot2", "lmtest", "maps",
"mfx", "orcutt", "plm", "quantmod", "sandwich",
"quantreg", "rio", "rmarkdown", "sampleSelection",
"stargazer", "survival", "systemfit", "truncreg",
"tseries", "urca", "xtable", "vars", "WDI", "wooldridge",
"xts", "zoo"))
x <- 5
x
x^2
(y <- 3)
(z <- y^x)
81*3
(a <- c(1,2,3,4,5,6))
(b <- a + 1)
(c <- a + b)
(d <- b*c)
sqrt(d)
## 1.5.- Vector-Functions -----------------------------------------------
# Define vector
(a <- c(7,2,6,9,4,1,3))
# Basic functions
sort(a)
length(a)
min(a)
max(a)
sum(a)
prod(a)
# Creating special victory
numeric(20)
rep(1,20)
seq(50)
seq(4,20,2)
## 1.6.- Logical --------------------------------------------------------
# Basic comparisons
0 == 1
0 < 1
# Logical vectors
(a <- c(7, 2, 6, 9, 4, 1, 3))
(b <- a < 3 | a >= 6)
## 1.7.- Factors --------------------------------------------------------
# Original ratings
x <- c(3, 2, 2, 3, 1, 2, 3, 2, 1, 2)
xf <- factor(x, labels = c("bad", "okey", "good"))
x
xf
product1 <- c(0, 3, 6, 9, 7, 8)
product2 <- c(1, 2, 3, 5, 9, 6)
product3 <- c(2, 4, 4, 2, 3, 2)
sales_mat <- cbind(product1, product2, product3)
rownames(sales_mat) <- year
## 1.12.- Data frames ---------------------------------------------------
# Define one x vector for all
year <- c(2008, 2009, 2010, 2011, 2012, 2013)
rownames(sales_mat) <- year
# The matrix looks like this
sales_mat
# Create a data frame and display it
sales <- as.data.frame(sales_mat)
sales
## 1.13.- Data frames vars ----------------------------------------------
# Accessing a single variable
sales$product2
# Generating a new variable in the data frame
sales$totalv1 <- sales$product1 + sales$product2 + sales$product3
# The same but using "attach"
attach(sales)
# The same but using "with"
sales$totalv2 <- with(sales, product1 + product2 + product3)
sales$totalv3 <- product1 + product2 + product3
detach(sales)
# Result
sales
## 1.14.- Data frames subsets -------------------------------------------
# Full data frame (from data_frames.r, has to be run first)
sales
# Subset: all years in wich sales of product 3 were >= 3
subset(sales, product3 >= 3)
data(ceosal1, package = "wooldridge")
attach(ceosal1)
# Ingredients to the OLS formulas
cov(roe, salary)
var(roe)
mean(salary)
mean(roe)
# Manual calculation of OLS coefficients
(b1hat <- cov(roe, salary / var(roe)))
# Manual calculation of OLS coefficients
(b1hat <- cov(roe, salary) / var(roe))
(b1hat <- cov(roe, salary) / var(roe))
(b0hat <- mean(salary) - b1hat*mean(roe))
# "detach" the data frame
detach(ceosal1)
# OLS regression
lm(salary ~ roe, data = ceosal1)
lm(salary ~ 0 + roe, data = ceosal1)
lm(salary ~ roe - 1, data = ceosal1)
# OLS regression
lm(salary ~ roe, data = ceosal1)
lm(salary ~ 0 + roe, data = ceosal1)
lm(salary ~ roe - 1, data = ceosal1)
names(ceosal1)
lm(salary ~ roe + sales)
lm(salary ~ roe + sales, data = ceosal1)
lm(salary ~ roe + sales - 1, data = ceosal1)
data(ceosal1, package = "wooldridge")
# OLS regression
CEOregres <- lm(salary ~ roe, data = ceosal1)
names(CEOregres)
# Scatter plot (restrict y axis limits)
with(ceosal1, plot(roe, salary, ylim = c(0, 4000)))
# Add OLS regression line
abline(CEOregres)
## 2.4.- Examen_2_4 -----------------------------------------------------
data(wage1, package = "wooldridge")
# OLS regression
lm(wage ~ educ, data = wage1)
summary.lm()
model1 <- lm(wage ~ educ, data = wage1)
summary.lm(model1)
## 3.1.- Example_3_1 ----------------------------------------------------
data(gpa1, package = "wooldridge")
# Just obtain parameter estimates
lm(colGPA ~ hsGPA + ACT, data = gpa1)
# Store results under"GPAres" and display full table
GPAres <- lm(colGPA ~ hsGPA + ACT, data = gpa1)
summary(GPAres)
summary.lm(GPAres)
# OLS regression
summary(lm(log(wage) ~ educ + exper + tenure, data = wage1))
