dir.create("1.slides")
dir.create("2.scripts")
dir.create("3.raw_data")
dir.create("4.documentation")
dir.create("5.processed_data")
dir.create("6.results")
dir.create("6.results/6.1.tables")
dir.create("6.results/6.2.figures")
dir.create("7.analysis")
mean(1:5)
a_vector <- c(1, 3, 6, 10)
apropos("vector")
# 1.1.- R as a calculator -------------------------------------------------
1 + 1
5*(4-1)^2
sqrt(log(10))
install.packages(c("AER","car","CensReg", "dplyr", "dummies",
"dynlm", "effects", "ggplot2", "lmtest", "maps",
"mfx", "orcutt", "plm", "quantmod", "sandwich",
"quantreg", "rio", "rmarkdown", "sampleSelection",
"stargazer", "survival", "systemfit", "truncreg",
"tseries", "urca", "xtable", "vars", "WDI", "wooldridge",
"xts", "zoo"))
x <- 5
x
x^2
(y <- 3)
(z <- y^x)
81*3
(a <- c(1,2,3,4,5,6))
(b <- a + 1)
(c <- a + b)
(d <- b*c)
sqrt(d)
## 1.5.- Vector-Functions -----------------------------------------------
# Define vector
(a <- c(7,2,6,9,4,1,3))
# Basic functions
sort(a)
length(a)
min(a)
max(a)
sum(a)
prod(a)
# Creating special victory
numeric(20)
rep(1,20)
seq(50)
seq(4,20,2)
## 1.6.- Logical --------------------------------------------------------
# Basic comparisons
0 == 1
0 < 1
# Logical vectors
(a <- c(7, 2, 6, 9, 4, 1, 3))
(b <- a < 3 | a >= 6)
## 1.7.- Factors --------------------------------------------------------
# Original ratings
x <- c(3, 2, 2, 3, 1, 2, 3, 2, 1, 2)
xf <- factor(x, labels = c("bad", "okey", "good"))
x
xf
product1 <- c(0, 3, 6, 9, 7, 8)
product2 <- c(1, 2, 3, 5, 9, 6)
product3 <- c(2, 4, 4, 2, 3, 2)
sales_mat <- cbind(product1, product2, product3)
rownames(sales_mat) <- year
## 1.12.- Data frames ---------------------------------------------------
# Define one x vector for all
year <- c(2008, 2009, 2010, 2011, 2012, 2013)
rownames(sales_mat) <- year
# The matrix looks like this
sales_mat
# Create a data frame and display it
sales <- as.data.frame(sales_mat)
sales
## 1.13.- Data frames vars ----------------------------------------------
# Accessing a single variable
sales$product2
# Generating a new variable in the data frame
sales$totalv1 <- sales$product1 + sales$product2 + sales$product3
# The same but using "attach"
attach(sales)
# The same but using "with"
sales$totalv2 <- with(sales, product1 + product2 + product3)
sales$totalv3 <- product1 + product2 + product3
detach(sales)
# Result
sales
## 1.14.- Data frames subsets -------------------------------------------
# Full data frame (from data_frames.r, has to be run first)
sales
# Subset: all years in wich sales of product 3 were >= 3
subset(sales, product3 >= 3)
data(ceosal1, package = "wooldridge")
attach(ceosal1)
# Ingredients to the OLS formulas
cov(roe, salary)
var(roe)
mean(salary)
mean(roe)
# Manual calculation of OLS coefficients
(b1hat <- cov(roe, salary / var(roe)))
# Manual calculation of OLS coefficients
(b1hat <- cov(roe, salary) / var(roe))
(b1hat <- cov(roe, salary) / var(roe))
(b0hat <- mean(salary) - b1hat*mean(roe))
# "detach" the data frame
detach(ceosal1)
# OLS regression
lm(salary ~ roe, data = ceosal1)
lm(salary ~ 0 + roe, data = ceosal1)
lm(salary ~ roe - 1, data = ceosal1)
# OLS regression
lm(salary ~ roe, data = ceosal1)
lm(salary ~ 0 + roe, data = ceosal1)
lm(salary ~ roe - 1, data = ceosal1)
names(ceosal1)
lm(salary ~ roe + sales)
lm(salary ~ roe + sales, data = ceosal1)
lm(salary ~ roe + sales - 1, data = ceosal1)
data(ceosal1, package = "wooldridge")
# OLS regression
CEOregres <- lm(salary ~ roe, data = ceosal1)
names(CEOregres)
# Scatter plot (restrict y axis limits)
with(ceosal1, plot(roe, salary, ylim = c(0, 4000)))
# Add OLS regression line
abline(CEOregres)
## 2.4.- Examen_2_4 -----------------------------------------------------
data(wage1, package = "wooldridge")
# OLS regression
lm(wage ~ educ, data = wage1)
summary.lm()
model1 <- lm(wage ~ educ, data = wage1)
summary.lm(model1)
## 3.1.- Example_3_1 ----------------------------------------------------
data(gpa1, package = "wooldridge")
# Just obtain parameter estimates
lm(colGPA ~ hsGPA + ACT, data = gpa1)
# Store results under"GPAres" and display full table
GPAres <- lm(colGPA ~ hsGPA + ACT, data = gpa1)
summary(GPAres)
summary.lm(GPAres)
# OLS regression
summary(lm(log(wage) ~ educ + exper + tenure, data = wage1))
## 3.3.- Example_3_3 ----------------------------------------------------
data(k401k, package = "wooldridge")
# OLS regression
summary(lm(prate ~ mrate + age, data = k401k))
## 3.4.- Example_3_5 ----------------------------------------------------
data(crime1, package = "wooldridge")
# Model without avgsen
summary(lm(narr86 ~ pcnv + avgsen + ptime86 + qemp86, data = crime1))
# Model with avgsen
summary(lm(narr86 ~ pcnv + avgsen + ptime86 + qemp86, data = crime1))
data(wage1, package = "wooldridge")
# OLS regression
summary(lm(log(wage) ~ educ, data = wage1))
## 3.6.- OLS_matrices ---------------------------------------------------
data(gpa1, package = "wooldridge")
# Determine sample size & no. of regressors
n <- nrow(gpa1)
n
k <- 2
View(gpa1)
# Extract "y"
y <- gpa1$colGPA
y
# Extract "X" & add a column of ones
X <- cbind(1, gpa1$hsGPA, gpa1$ACT)
X
# Display first rows of "X"
head(X)
# Parameter estimates
(bhat <- solve(t(X)%*%X) %*% t(X)%*%y)
# Residuals, estimated variance of "u" and SER
uhat <- y - X %*% bhat
uhat
(SER <- sqrt(sigsqhat))
sigsqhat <- as.numeric(t(uhat)%*%uhat/(n - k - 1))
(SER <- sqrt(sigsqhat))
# Estimated variance of the parameter estimators and SE
Vbetahat <- sigsqhat * solve(t(X)%*%X)
(se <- sqrt(diag(Vbetahat)))
lm(colGPA ~ hsGPA + ACT, data = "gpa1")
lm(colGPA ~ hsGPA + ACT, data = gpa1)
summary.lm(  lm(colGPA ~ hsGPA + ACT, data = gpa1)  )
## 4.1.- Example_4_3 ----------------------------------------------------
data(gpa1, package = "wooldridge")
# Store results under "sumres" and display full table
(sumres <- summary(lm(colGPA ~ hsGPA + ACT + skipped, data = gpa1)))
data(gpa1, package = "wooldridge")
# Store results under "sumres" and display full table
(sumres <- summary(lm(colGPA ~ hsGPA + ACT + skipped, data = gpa1)))
# Manually confirm the formulas: Extract coefficients and SE
regtable <- sumres$coefficients
bhat <- regtable[,1]
se   <- regtable[,2]
# Reproduce t statistic
(tstat <- bhat / se)
# Reproduce p-value
(pval <- 2*pt(-abs(tstat),137))
## 4.2.- Example_4_1 ----------------------------------------------------
data(wage1, package = "wooldridge")
# OLS regression
summary(lm(log(wage) ~ educ + exper + tenure, data = wage1))
# 10.1.- Example_10_2 -----------------------------------------------------
data(intdef, package = "wooldridge")
# Linear regression of static model
summary(lm(i3 ~ inf + def, data = intdef))
# 10.2.- Example_Barium ---------------------------------------------------
data(barium, package = "wooldridge")
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(barium$chnimp, start = c(1978,2), frequency = 12)
# Plot time series
plot(impts)
pdf("fig1_ts.pdf")
plot(1:10, main="6.results/6.2.figures")  # Tu gráfico aquí
dev.off()  # Cerrar el dispositivo
pdf("fig1_ts.pdf")  # Nombre del archivo
plot(impts, main="6.results/6.2.figures")  # Tu gráfico aquí
dev.off()  # Cerrar el dispositivo
png("fig_ts.png", width=800, height=600)  # Nombre y dimensiones del archivo
plot(impts, main="6.results/6.2.figures")  # Tu gráfico aquí
dev.off()  # Cerrar el dispositivo
pwd()
getwd()
png("fig_ts.png", width=800, height=600)  # Nombre y dimensiones del archivo
plot(impts, main="/6.results/6.2.figures")  # Tu gráfico aquí
dev.off()  # Cerrar el dispositivo
pdf("fig1_ts.pdf")  # Nombre del archivo
plot(impts, main="D:/master/my_books/r_course/r_for_research/econometrics_with_r/6.results/6.2.figures")  # Tu gráfico aquí
dev.off()
pdf("fig1_ts.pdf")  # Nombre del archivo
plot(impts, main="D:/master/my_books/r_course/r_for_research/econometrics_with_r/6.results/6.2.figures")  # Tu gráfico aquí
dev.off()  # Cerrar el dispositivo
# load libraries ----------------------------------------------------------
library(ggplot2)
fig1_ts <- ggplot(impts, aes(x=c(1978,2), y=impts)) +
geom_line(color="blue") +
ggtitle("Número de Pasajeros de Aerolínea a lo Largo del Tiempo") +
xlab("Año") +
ylab("Número de Pasajeros")
fig1_ts <- ggplot(impts) +
geom_line(color="blue") +
ggtitle("Número de Pasajeros de Aerolínea a lo Largo del Tiempo") +
xlab("Año") +
ylab("Número de Pasajeros")
fig1_ts <- ggplot(impts, aes(x=1978, y=impts)) +
geom_line(color="blue") +
ggtitle("Número de Pasajeros de Aerolínea a lo Largo del Tiempo") +
xlab("Año") +
ylab("Número de Pasajeros")
df1 <- data.frame(impts)
df1
fig1_ts <- ggplot(impts) +
geom_line(color="blue") +
ggtitle("Número de Pasajeros de Aerolínea a lo Largo del Tiempo") +
xlab("Año") +
ylab("Número de Pasajeros")
fig1_ts <- ggplot(df1) +
geom_line(color="blue") +
ggtitle("Número de Pasajeros de Aerolínea a lo Largo del Tiempo") +
xlab("Año") +
ylab("Número de Pasajeros")
fig1_ts
plot(impts)
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(barium$chnimp, start = c(1978,2), frequency = 12)
ts1 <- ggplot(impts) +
geom_line(color = "blue")
barium
View(barium)
# Plot time series
ts1 <- plot(impts)
ggsave(filename = "6.results/6.2.figures/fig1_ts.pdf",
plot = ts1, width = 8,
height = 6, dpi = 300)
fechas_mensuales <- seq(from = as.Date("1978-02-01"), to = as.Date("1988-12-01"), by = "month")
print(fechas_mensuales)
date_monthly <- seq(from = as.Date("1978-02-01"),
to = as.Date("1988-12-01"), by = "month")
print(date_monthly)
df1 <- data.frame(
date_monthy = time(date_monthly),
chnimp = as.numeric(barium$chnimp)
)
df1
ts1 <- ggplot(df1, aes(x = date_monthly, y = chnimp )) +
geom_line(color = "blue")
ts1
ggsave(filename = "6.results/6.2.figures/fig1_ts.pdf",
plot = ts1, width = 8,
height = 6, dpi = 300)
df1
View(df1)
length(barium)
View(df1)
rm(list = ls())
getwd()
# load libraries ----------------------------------------------------------
library(ggplot2)
data(barium, package = "wooldridge")
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(barium$chnimp, start = c(1978,2), frequency = 12)
# Plot time series
plot(impts)
names(barium)
attach(barium)
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(barium$chnimp, start = c(1978,2), frequency = 12)
impts <- ts(chnimp, start = c(1978,2), frequency = 12)
# Plot time series
plot(impts)
rm(list = ls)
rm(list = ls())
data(barium, package = "wooldridge")
names(barium)
attach(barium)
detach(barium)
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(barium$chnimp, start = c(1978,2), frequency = 12)
impts <- ts(chnimp, start = c(1978,2), frequency = 12)
rm(list = ls())
data(barium, package = "wooldridge")
names(barium)
attach(barium)
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(chnimp, start = c(1978,2), frequency = 12)
impts
date_monthly <-  seq(from = as.Date("1978-02-01"),
to = as.Date("1988-12-01"), by = "month")
date_monthly
df2 <- cbind(date_month, df1)
df1 <- data.frame(
date_monthly = seq(from = as.Date("1978-02-01"),
to = as.Date("1988-12-01"), by = "month"),
chnimp = as.numeric(barium$chnimp)
)
df2 <- cbind(date_month, barium)
ate_monthly <-  seq(from = as.Date("1978-02-01"),
to = as.Date("1988-12-01"), by = "month")
df2 <- cbind(date_month, barium)
date_month <-  seq(from = as.Date("1978-02-01"),
to = as.Date("1988-12-01"), by = "month")
df2 <- cbind(date_month, barium)
df2
View(df2)
View(df2)
rm(list = ls())
data(barium, package = "wooldridge")
names(barium)
attach(barium)
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(chnimp, start = c(1978,2), frequency = 12)
# Plot time series
plot(impts)
month <-  seq(from = as.Date("1978-02-01"),
to   = as.Date("1988-12-01"), by = "month")
df2 <- cbind(month, barium)
View(df2)
ts1 <- ggplot(df2, aes(x = month, y = chnimp)) +
geom_line(color = "blue") +
labs(title = "Serie de Tiempo de CHNIMP",
x = "Fecha", y = "CHNIMP")
ggsave(filename = "6.results/6.2.figures/fig1_ts.pdf", plot = ts1,
width = 8, height = 6, dpi = 300)
# 10.3.- Example_zoo ------------------------------------------------------
data(intdef, package = "wooldridge")
# Variable "year" as the time measure
intdef$year
install.packages("zoo")
library(zoo)
# Define "zoo" object containing all data, time measure = year
zoodata <- zoo(intdef, order.by = intdef$year)
zoodata
# Time series plot of inflation
plot(zoodata$i3)
plot(df2$befile6)
plot(df2$bchlimp)
plot(df2$gas)
line(df2$gas)
tsline(df2$gas)
# Time series plot of inflation
plot(zoodata$i3)
# Time series plot of inflation
plot(zoodata$i3, color = "red")
# Time series plot of inflation
plot(zoodata$i3)
ts2 <- ggplot(zoodata, aes(x=year, y = i3)) +
geom_line(color = "red") +
labs(title = "Time Series of i3",
x = "Date", y = "i3")
ggsave(filename = "6.results/6.2.figures/fig2_ts.pdf", plot = ts2,
with = 8, height = 6, dpi = 300)
library(ggplot2)
library(zoo)
ts2 <- ggplot(zoodata, aes(x=year, y = i3)) +
geom_line(color = "red") +
labs(title = "Time Series of i3",
x = "Date", y = "i3")
ggsave(filename = "6.results/6.2.figures/fig2_ts.pdf", plot = ts2,
with = 8, height = 6, dpi = 300)
# Define "zoo" object containing all data, time measure = year
zoodata <- zoo(intdef, order.by = intdef$year)
data(barium, package = "wooldridge")
names(barium)
attach(barium)
# Imports from china: variable "chnimp" from data frame "data"
# Monthly time series starting Feb. 1978
impts <- ts(chnimp, start = c(1978,2), frequency = 12)
# Plot time series
plot(impts)
# Another option
month <-  seq(from = as.Date("1978-02-01"),
to   = as.Date("1988-12-01"), by = "month")
df2 <- cbind(month, barium)
ts1 <- ggplot(df2, aes(x = month, y = chnimp)) +
geom_line(color = "blue") +
labs(title = "Time Serie of CHNIMP",
x = "Date", y = "CHNIMP")
ggsave(filename = "6.results/6.2.figures/fig1_ts.pdf", plot = ts1,
width = 8, height = 6, dpi = 300)
data(intdef, package = "wooldridge")
# Variable "year" as the time measure
intdef$year
# Define "zoo" object containing all data, time measure = year
zoodata <- zoo(intdef, order.by = intdef$year)
# Time series plot of inflation
plot(zoodata$i3)
# Another option
ts2 <- ggplot(zoodata, aes(x=year, y = i3)) +
geom_line(color = "red") +
labs(title = "Time Series of i3",
x = "Date", y = "i3")
ggsave(filename = "6.results/6.2.figures/fig2_ts.pdf", plot = ts2,
with = 8, height = 6, dpi = 300)
data(intdef, package = "wooldridge")
# Variable "year" as the time measure
intdef$year
# Define "zoo" object containing all data, time measure = year
zoodata <- zoo(intdef, order.by = intdef$year)
# Time series plot of inflation
plot(zoodata$i3)
